{"ast":null,"code":"import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nvar supportsPointerEvents = function supportsPointerEvents() {\n  return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function supportsTouchEvents() {\n  return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function supportsMouseEvents() {\n  return isBrowser && window.onmousedown === null;\n};\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };","map":{"version":3,"names":["isBrowser","supportsPointerEvents","window","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown"],"sources":["R:/Projects/Trivia-Maximus/node_modules/framer-motion/dist/es/events/utils.mjs"],"sourcesContent":["import { isBrowser } from '../utils/is-browser.mjs';\r\n\r\n// We check for event support via functions in case they've been mocked by a testing suite.\r\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\r\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\r\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\r\n\r\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,yBAAyB;;AAEnD;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqB;EAAA,OAASD,SAAS,IAAIE,MAAM,CAACC,aAAa,KAAK,IAAI;AAAA;AAC9E,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB;EAAA,OAASJ,SAAS,IAAIE,MAAM,CAACG,YAAY,KAAK,IAAI;AAAA;AAC3E,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB;EAAA,OAASN,SAAS,IAAIE,MAAM,CAACK,WAAW,KAAK,IAAI;AAAA;AAE1E,SAASD,mBAAmB,EAAEL,qBAAqB,EAAEG,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}