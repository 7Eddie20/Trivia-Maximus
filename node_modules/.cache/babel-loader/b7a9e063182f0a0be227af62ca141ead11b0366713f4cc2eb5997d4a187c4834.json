{"ast":null,"code":"import{useContext}from'react';import QuestionBox from'../../components/QuestionBox/QuestionBox';import quizContext from'../../context/quizContext';import Scoreboard from'../ScoreBoard/Scoreboard';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QuizArea=function QuizArea(){var context=useContext(quizContext);var questions=context.questions,next=context.next,len=context.len,score=context.score;var randomNumber=function randomNumber(){return Math.floor(Math.random()*4);};var getOptions=function getOptions(incorrectAns,correctAns){var optionsArray=incorrectAns;if(!optionsArray.includes(correctAns)){optionsArray.splice(randomNumber(),0,correctAns);return[optionsArray,correctAns];}else{return[optionsArray,correctAns];}};return/*#__PURE__*/_jsx(_Fragment,{children://For fetch All the Questions ðŸ”´\n// questions.map((index) => {\n//     const options = getOptions(index.incorrect_answers, index.correct_answer)\n//     return <QuestionBox category={index.category} options={options} question={index.question} key={index.question} />\n// })\nnext<=len-1?/*#__PURE__*/_jsx(\"div\",{className:\"container p-4\",children:/*#__PURE__*/_jsx(QuestionBox,{category:questions[next].category,options:getOptions(questions[next].incorrect_answers,questions[next].correct_answer),question:questions[next].question},questions[next].question)}):/*#__PURE__*/_jsx(Scoreboard,{total_que:len,wrong_que:score.wrongAnswers,correct_que:score.rightAnswers})});};export default QuizArea;","map":{"version":3,"names":["useContext","QuestionBox","quizContext","Scoreboard","QuizArea","context","questions","next","len","score","randomNumber","Math","floor","random","getOptions","incorrectAns","correctAns","optionsArray","includes","splice","category","incorrect_answers","correct_answer","question","wrongAnswers","rightAnswers"],"sources":["R:/Projects/Trivia-Maximus/src/pages/QuizArea/QuizArea.jsx"],"sourcesContent":["import { useContext } from 'react';\r\nimport QuestionBox from '../../components/QuestionBox/QuestionBox'\r\nimport quizContext from '../../context/quizContext';\r\nimport Scoreboard from '../ScoreBoard/Scoreboard';\r\n\r\nconst QuizArea = () => {\r\n    const context = useContext(quizContext)\r\n    const { questions, next, len, score } = context\r\n\r\n    const randomNumber = () => {\r\n        return Math.floor(Math.random() * 4);\r\n    }\r\n\r\n    const getOptions = (incorrectAns, correctAns) => {\r\n        let optionsArray = incorrectAns;\r\n        if (!optionsArray.includes(correctAns)) {\r\n            optionsArray.splice(randomNumber(), 0, correctAns);\r\n            return [optionsArray, correctAns];\r\n        } else {\r\n            return [optionsArray, correctAns];\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                //For fetch All the Questions ðŸ”´\r\n\r\n                // questions.map((index) => {\r\n                //     const options = getOptions(index.incorrect_answers, index.correct_answer)\r\n                //     return <QuestionBox category={index.category} options={options} question={index.question} key={index.question} />\r\n                // })\r\n\r\n                (next <= len - 1)\r\n                    ?\r\n                    <div className=\"container p-4\">\r\n                        < QuestionBox category={questions[next].category} options={getOptions(questions[next].incorrect_answers, questions[next].correct_answer)} question={questions[next].question} key={questions[next].question} />\r\n                    </div>\r\n                    :\r\n                    <Scoreboard total_que={len} wrong_que={score.wrongAnswers} correct_que={score.rightAnswers} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuizArea\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,MAAOC,YAAW,KAAM,0CAA0C,CAClE,MAAOC,YAAW,KAAM,2BAA2B,CACnD,MAAOC,WAAU,KAAM,0BAA0B,CAAC,gGAElD,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACnB,GAAMC,QAAO,CAAGL,UAAU,CAACE,WAAW,CAAC,CACvC,GAAQI,UAAS,CAAuBD,OAAO,CAAvCC,SAAS,CAAEC,IAAI,CAAiBF,OAAO,CAA5BE,IAAI,CAAEC,GAAG,CAAYH,OAAO,CAAtBG,GAAG,CAAEC,KAAK,CAAKJ,OAAO,CAAjBI,KAAK,CAEnC,GAAMC,aAAY,CAAG,QAAfA,aAAY,EAAS,CACvB,MAAOC,KAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAG,CAAC,CAAC,CACxC,CAAC,CAED,GAAMC,WAAU,CAAG,QAAbA,WAAU,CAAIC,YAAY,CAAEC,UAAU,CAAK,CAC7C,GAAIC,aAAY,CAAGF,YAAY,CAC/B,GAAI,CAACE,YAAY,CAACC,QAAQ,CAACF,UAAU,CAAC,CAAE,CACpCC,YAAY,CAACE,MAAM,CAACT,YAAY,EAAE,CAAE,CAAC,CAAEM,UAAU,CAAC,CAClD,MAAO,CAACC,YAAY,CAAED,UAAU,CAAC,CACrC,CAAC,IAAM,CACH,MAAO,CAACC,YAAY,CAAED,UAAU,CAAC,CACrC,CACJ,CAAC,CAGD,mBACI,yBAEQ;AAEA;AACA;AACA;AACA;AAECT,IAAI,EAAIC,GAAG,CAAG,CAAC,cAEZ,YAAK,SAAS,CAAC,eAAe,uBAC1B,KAAE,WAAW,EAAC,QAAQ,CAAEF,SAAS,CAACC,IAAI,CAAC,CAACa,QAAS,CAAC,OAAO,CAAEN,UAAU,CAACR,SAAS,CAACC,IAAI,CAAC,CAACc,iBAAiB,CAAEf,SAAS,CAACC,IAAI,CAAC,CAACe,cAAc,CAAE,CAAC,QAAQ,CAAEhB,SAAS,CAACC,IAAI,CAAC,CAACgB,QAAS,EAAMjB,SAAS,CAACC,IAAI,CAAC,CAACgB,QAAQ,CAAI,EAC7M,cAEN,KAAC,UAAU,EAAC,SAAS,CAAEf,GAAI,CAAC,SAAS,CAAEC,KAAK,CAACe,YAAa,CAAC,WAAW,CAAEf,KAAK,CAACgB,YAAa,EAAG,EAEvG,CAEX,CAAC,CAED,cAAerB,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}