{"ast":null,"code":"import _regeneratorRuntime from\"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import QuizContext from\"./quizContext\";import{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var QuizState=function QuizState(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState({'rightAnswers':0,'wrongAnswers':0}),_useState4=_slicedToArray(_useState3,2),score=_useState4[0],setScore=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),next=_useState6[0],setNext=_useState6[1];// const demoURL = 'https://opentdb.com/api.php?amount=4&category=&difficulty=&type=boolean'\nvar _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),url=_useState8[0],setUrl=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var len=questions.length;var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),answerList=_useState12[0],setAnswerList=_useState12[1];var fetchQuestions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(api){var response,data,results;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(api);case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;results=data.results;setQuestions(results);setLoading(false);case 9:case\"end\":return _context.stop();}}},_callee);}));return function fetchQuestions(_x){return _ref.apply(this,arguments);};}();useEffect(function(){fetchQuestions(url);},[url]);return/*#__PURE__*/_jsx(QuizContext.Provider,{value:{answerList:answerList,setAnswerList:setAnswerList,len:len,questions:questions,setQuestions:setQuestions,url:url,setUrl:setUrl,fetchQuestions:fetchQuestions,loading:loading,setLoading:setLoading,score:score,setScore:setScore,next:next,setNext:setNext},children:props.children});};export default QuizState;","map":{"version":3,"names":["QuizContext","useEffect","useState","QuizState","props","questions","setQuestions","score","setScore","next","setNext","url","setUrl","loading","setLoading","len","length","answerList","setAnswerList","fetchQuestions","api","fetch","response","json","data","results","children"],"sources":["R:/Projects/Trivia-Maximus/src/context/QuizState.js"],"sourcesContent":["import QuizContext from \"./quizContext\";\nimport { useEffect, useState } from \"react\";\n\n\nconst QuizState = (props) => {\n\n    const [questions, setQuestions] = useState([]);\n    const [score, setScore] = useState({ 'rightAnswers': 0, 'wrongAnswers': 0 });\n    const [next, setNext] = useState(0);\n    // const demoURL = 'https://opentdb.com/api.php?amount=4&category=&difficulty=&type=boolean'\n    const [url, setUrl] = useState('');\n    const [loading, setLoading] = useState(false);\n    const len = questions.length;\n    const [answerList, setAnswerList] = useState([])\n\n    const fetchQuestions = async (api) => {\n        const response = await fetch(api);\n        const data = await response.json();\n        let results = data.results;\n        setQuestions(results);\n        setLoading(false);\n    };\n\n    useEffect(() => {\n        fetchQuestions(url);\n    }, [url]);\n\n\n\n    return (\n        <QuizContext.Provider value={{ answerList, setAnswerList, len, questions, setQuestions, url, setUrl, fetchQuestions, loading, setLoading, score, setScore, next, setNext }}>\n            {props.children}\n        </QuizContext.Provider>\n    )\n}\n\nexport default QuizState"],"mappings":"gWAAA,MAAOA,YAAW,KAAM,eAAe,CACvC,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,2CAG5C,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,KAAK,CAAK,CAEzB,cAAkCF,QAAQ,CAAC,EAAE,CAAC,wCAAvCG,SAAS,eAAEC,YAAY,eAC9B,eAA0BJ,QAAQ,CAAC,CAAE,cAAc,CAAE,CAAC,CAAE,cAAc,CAAE,CAAE,CAAC,CAAC,yCAArEK,KAAK,eAAEC,QAAQ,eACtB,eAAwBN,QAAQ,CAAC,CAAC,CAAC,yCAA5BO,IAAI,eAAEC,OAAO,eACpB;AACA,eAAsBR,QAAQ,CAAC,EAAE,CAAC,yCAA3BS,GAAG,eAAEC,MAAM,eAClB,eAA8BV,QAAQ,CAAC,KAAK,CAAC,0CAAtCW,OAAO,gBAAEC,UAAU,gBAC1B,GAAMC,IAAG,CAAGV,SAAS,CAACW,MAAM,CAC5B,gBAAoCd,QAAQ,CAAC,EAAE,CAAC,2CAAzCe,UAAU,gBAAEC,aAAa,gBAEhC,GAAMC,eAAc,4FAAG,iBAAOC,GAAG,oKACNC,MAAK,CAACD,GAAG,CAAC,QAA3BE,QAAQ,qCACKA,SAAQ,CAACC,IAAI,EAAE,QAA5BC,IAAI,eACNC,OAAO,CAAGD,IAAI,CAACC,OAAO,CAC1BnB,YAAY,CAACmB,OAAO,CAAC,CACrBX,UAAU,CAAC,KAAK,CAAC,CAAC,sDACrB,kBANKK,eAAc,4CAMnB,CAEDlB,SAAS,CAAC,UAAM,CACZkB,cAAc,CAACR,GAAG,CAAC,CACvB,CAAC,CAAE,CAACA,GAAG,CAAC,CAAC,CAIT,mBACI,KAAC,WAAW,CAAC,QAAQ,EAAC,KAAK,CAAE,CAAEM,UAAU,CAAVA,UAAU,CAAEC,aAAa,CAAbA,aAAa,CAAEH,GAAG,CAAHA,GAAG,CAAEV,SAAS,CAATA,SAAS,CAAEC,YAAY,CAAZA,YAAY,CAAEK,GAAG,CAAHA,GAAG,CAAEC,MAAM,CAANA,MAAM,CAAEO,cAAc,CAAdA,cAAc,CAAEN,OAAO,CAAPA,OAAO,CAAEC,UAAU,CAAVA,UAAU,CAAEP,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAQ,CAAEC,IAAI,CAAJA,IAAI,CAAEC,OAAO,CAAPA,OAAQ,CAAE,UACtKN,KAAK,CAACsB,QAAQ,EACI,CAE/B,CAAC,CAED,cAAevB,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}