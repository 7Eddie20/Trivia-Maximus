{"ast":null,"code":"import _objectSpread from \"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { useContext, useRef, useMemo } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { DeprecatedLayoutGroupContext } from '../../context/DeprecatedLayoutGroupContext.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { nodeGroup } from '../../projection/node/group.mjs';\nvar shouldInheritGroup = function shouldInheritGroup(inherit) {\n  return inherit === true;\n};\nvar shouldInheritId = function shouldInheritId(inherit) {\n  return shouldInheritGroup(inherit === true) || inherit === \"id\";\n};\nvar LayoutGroup = function LayoutGroup(_ref) {\n  var children = _ref.children,\n    id = _ref.id,\n    inheritId = _ref.inheritId,\n    _ref$inherit = _ref.inherit,\n    inherit = _ref$inherit === void 0 ? true : _ref$inherit;\n  // Maintain backwards-compatibility with inheritId until 7.0\n  if (inheritId !== undefined) inherit = inheritId;\n  var layoutGroupContext = useContext(LayoutGroupContext);\n  var deprecatedLayoutGroupContext = useContext(DeprecatedLayoutGroupContext);\n  var _useForceUpdate = useForceUpdate(),\n    _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),\n    forceRender = _useForceUpdate2[0],\n    key = _useForceUpdate2[1];\n  var context = useRef(null);\n  var upstreamId = layoutGroupContext.id || deprecatedLayoutGroupContext;\n  if (context.current === null) {\n    if (shouldInheritId(inherit) && upstreamId) {\n      id = id ? upstreamId + \"-\" + id : upstreamId;\n    }\n    context.current = {\n      id: id,\n      group: shouldInheritGroup(inherit) ? layoutGroupContext.group || nodeGroup() : nodeGroup()\n    };\n  }\n  var memoizedContext = useMemo(function () {\n    return _objectSpread(_objectSpread({}, context.current), {}, {\n      forceRender: forceRender\n    });\n  }, [key]);\n  return React.createElement(LayoutGroupContext.Provider, {\n    value: memoizedContext\n  }, children);\n};\nexport { LayoutGroup };","map":{"version":3,"names":["React","useContext","useRef","useMemo","LayoutGroupContext","DeprecatedLayoutGroupContext","useForceUpdate","nodeGroup","shouldInheritGroup","inherit","shouldInheritId","LayoutGroup","children","id","inheritId","undefined","layoutGroupContext","deprecatedLayoutGroupContext","forceRender","key","context","upstreamId","current","group","memoizedContext","createElement","Provider","value"],"sources":["R:/Projects/Trivia-Maximus/node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs"],"sourcesContent":["import * as React from 'react';\r\nimport { useContext, useRef, useMemo } from 'react';\r\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\r\nimport { DeprecatedLayoutGroupContext } from '../../context/DeprecatedLayoutGroupContext.mjs';\r\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\r\nimport { nodeGroup } from '../../projection/node/group.mjs';\r\n\r\nconst shouldInheritGroup = (inherit) => inherit === true;\r\nconst shouldInheritId = (inherit) => shouldInheritGroup(inherit === true) || inherit === \"id\";\r\nconst LayoutGroup = ({ children, id, inheritId, inherit = true }) => {\r\n    // Maintain backwards-compatibility with inheritId until 7.0\r\n    if (inheritId !== undefined)\r\n        inherit = inheritId;\r\n    const layoutGroupContext = useContext(LayoutGroupContext);\r\n    const deprecatedLayoutGroupContext = useContext(DeprecatedLayoutGroupContext);\r\n    const [forceRender, key] = useForceUpdate();\r\n    const context = useRef(null);\r\n    const upstreamId = layoutGroupContext.id || deprecatedLayoutGroupContext;\r\n    if (context.current === null) {\r\n        if (shouldInheritId(inherit) && upstreamId) {\r\n            id = id ? upstreamId + \"-\" + id : upstreamId;\r\n        }\r\n        context.current = {\r\n            id,\r\n            group: shouldInheritGroup(inherit)\r\n                ? layoutGroupContext.group || nodeGroup()\r\n                : nodeGroup(),\r\n        };\r\n    }\r\n    const memoizedContext = useMemo(() => ({ ...context.current, forceRender }), [key]);\r\n    return (React.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children));\r\n};\r\n\r\nexport { LayoutGroup };\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AACnD,SAASC,kBAAkB,QAAQ,sCAAsC;AACzE,SAASC,4BAA4B,QAAQ,gDAAgD;AAC7F,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,SAAS,QAAQ,iCAAiC;AAE3D,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,OAAO;EAAA,OAAKA,OAAO,KAAK,IAAI;AAAA;AACxD,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAID,OAAO;EAAA,OAAKD,kBAAkB,CAACC,OAAO,KAAK,IAAI,CAAC,IAAIA,OAAO,KAAK,IAAI;AAAA;AAC7F,IAAME,WAAW,GAAG,SAAdA,WAAW,OAAoD;EAAA,IAA9CC,QAAQ,QAARA,QAAQ;IAAEC,EAAE,QAAFA,EAAE;IAAEC,SAAS,QAATA,SAAS;IAAA,oBAAEL,OAAO;IAAPA,OAAO,6BAAG,IAAI;EAC1D;EACA,IAAIK,SAAS,KAAKC,SAAS,EACvBN,OAAO,GAAGK,SAAS;EACvB,IAAME,kBAAkB,GAAGf,UAAU,CAACG,kBAAkB,CAAC;EACzD,IAAMa,4BAA4B,GAAGhB,UAAU,CAACI,4BAA4B,CAAC;EAC7E,sBAA2BC,cAAc,EAAE;IAAA;IAApCY,WAAW;IAAEC,GAAG;EACvB,IAAMC,OAAO,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC5B,IAAMmB,UAAU,GAAGL,kBAAkB,CAACH,EAAE,IAAII,4BAA4B;EACxE,IAAIG,OAAO,CAACE,OAAO,KAAK,IAAI,EAAE;IAC1B,IAAIZ,eAAe,CAACD,OAAO,CAAC,IAAIY,UAAU,EAAE;MACxCR,EAAE,GAAGA,EAAE,GAAGQ,UAAU,GAAG,GAAG,GAAGR,EAAE,GAAGQ,UAAU;IAChD;IACAD,OAAO,CAACE,OAAO,GAAG;MACdT,EAAE,EAAFA,EAAE;MACFU,KAAK,EAAEf,kBAAkB,CAACC,OAAO,CAAC,GAC5BO,kBAAkB,CAACO,KAAK,IAAIhB,SAAS,EAAE,GACvCA,SAAS;IACnB,CAAC;EACL;EACA,IAAMiB,eAAe,GAAGrB,OAAO,CAAC;IAAA,uCAAYiB,OAAO,CAACE,OAAO;MAAEJ,WAAW,EAAXA;IAAW;EAAA,CAAG,EAAE,CAACC,GAAG,CAAC,CAAC;EACnF,OAAQnB,KAAK,CAACyB,aAAa,CAACrB,kBAAkB,CAACsB,QAAQ,EAAE;IAAEC,KAAK,EAAEH;EAAgB,CAAC,EAAEZ,QAAQ,CAAC;AAClG,CAAC;AAED,SAASD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}