{"ast":null,"code":"var _jsxFileName = \"R:\\\\Projects\\\\Trivia-Maximus\\\\src\\\\components\\\\QuestionBox\\\\QuestionBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport './QuestionBox.css';\nimport { Badge } from '@chakra-ui/react';\nimport quizContext from '../../context/quizContext';\n\n// #0b4b06 - bg\n// #53a24db5 - border\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionBox = props => {\n  _s();\n  const [selectedAns, setSelectedAns] = useState('');\n  const context = useContext(quizContext);\n  const {\n    setScore,\n    score,\n    next,\n    setNext,\n    len,\n    answerList,\n    setAnswerList\n  } = context;\n  const {\n    question,\n    options,\n    category\n  } = props;\n  //Here options[0] = options array and options[1] = correct answer\n  let i = -1;\n  const alphabet = ['A', 'B', 'C', 'D'];\n  // let currentAlpha = ''\n\n  const removeClass = () => {\n    let element = document.getElementsByClassName('q-box_body');\n    for (let i = 0; i < element.length; i++) {\n      for (let j = 0; j < element[i].children.length; j++) {\n        element[i].children[j].classList.remove('optionSelected');\n      }\n    }\n  };\n\n  //Update the score \n  const checkAnswer = selectedAns => {\n    if (selectedAns === '') {\n      return true;\n    } else if (selectedAns === options[1]) {\n      setScore({\n        ...score,\n        'rightAnswers': score.rightAnswers + 1\n      });\n    } else {\n      setScore({\n        ...score,\n        'wrongAnswers': score.wrongAnswers + 1\n      });\n    }\n  };\n  const handleOptionClick = e => {\n    removeClass();\n    setSelectedAns(e.target.innerText.slice(1).trim());\n    const currentAlpha = e.target.innerText[0];\n    document.getElementById(currentAlpha).classList.add('optionSelected');\n  };\n  const handleNextQuestion = () => {\n    if (next <= len - 1) {\n      checkAnswer(selectedAns);\n      setNext(next + 1);\n      setSelectedAns('');\n    }\n    setAnswerList([...answerList, {\n      'question': question,\n      'options': options[0],\n      'id': `id${next}`,\n      'category': category,\n      'myAnswer': selectedAns,\n      'rightAnswer': options[1]\n    }]);\n  };\n\n  // for reverse timer\n  const [timer, setTimer] = useState(30);\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      } else {\n        setNext(next + 1);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q-box mx-auto my-5 p-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"q-box_head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"q-box_timer\",\n          children: [timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"q-question\",\n          dangerouslySetInnerHTML: {\n            __html: question\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"q-box_body\",\n        children: options[0].map(index => {\n          i++;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: alphabet[i],\n            onClick: handleOptionClick,\n            className: \"q-box_options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-icon\",\n              children: alphabet[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: index\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 82\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap justify-content-between align-items-center mx-3\",\n        children: [/*#__PURE__*/_jsxDEV(Badge, {\n          colorScheme: \"purple\",\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          className: \"btn btn-primary m-2\",\n          children: next >= len - 1 ? 'Submit' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(QuestionBox, \"/fkLgq8XOgG3EssX8EsPOlzirlI=\");\n_c = QuestionBox;\nexport default QuestionBox;\nvar _c;\n$RefreshReg$(_c, \"QuestionBox\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Badge","quizContext","QuestionBox","props","selectedAns","setSelectedAns","context","setScore","score","next","setNext","len","answerList","setAnswerList","question","options","category","i","alphabet","removeClass","element","document","getElementsByClassName","length","j","children","classList","remove","checkAnswer","rightAnswers","wrongAnswers","handleOptionClick","e","target","innerText","slice","trim","currentAlpha","getElementById","add","handleNextQuestion","timer","setTimer","myInterval","setInterval","clearInterval","__html","map","index"],"sources":["R:/Projects/Trivia-Maximus/src/components/QuestionBox/QuestionBox.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport './QuestionBox.css'\r\nimport { Badge } from '@chakra-ui/react'\r\nimport quizContext from '../../context/quizContext'\r\n\r\n\r\n// #0b4b06 - bg\r\n// #53a24db5 - border\r\n\r\n\r\nconst QuestionBox = (props) => {\r\n\r\n    const [selectedAns, setSelectedAns] = useState('')\r\n    const context = useContext(quizContext)\r\n    const { setScore, score, next, setNext, len, answerList, setAnswerList } = context\r\n    const { question, options, category } = props\r\n    //Here options[0] = options array and options[1] = correct answer\r\n    let i = -1\r\n    const alphabet = ['A', 'B', 'C', 'D']\r\n    // let currentAlpha = ''\r\n\r\n    const removeClass = () => {\r\n        let element = document.getElementsByClassName('q-box_body')\r\n        for (let i = 0; i < element.length; i++) {\r\n            for (let j = 0; j < element[i].children.length; j++) {\r\n                element[i].children[j].classList.remove('optionSelected')\r\n            }\r\n        }\r\n    }\r\n\r\n    //Update the score \r\n    const checkAnswer = (selectedAns) => {\r\n        if (selectedAns === '') {\r\n            return true;\r\n        } else if (selectedAns === options[1]) {\r\n            setScore({ ...score, 'rightAnswers': score.rightAnswers + 1 })\r\n        } else {\r\n            setScore({ ...score, 'wrongAnswers': score.wrongAnswers + 1 })\r\n        }\r\n    }\r\n\r\n    const handleOptionClick = (e) => {\r\n        removeClass()\r\n        setSelectedAns((e.target.innerText.slice(1)).trim())\r\n        const currentAlpha = e.target.innerText[0]\r\n        document.getElementById(currentAlpha).classList.add('optionSelected')\r\n    }\r\n\r\n    const handleNextQuestion = () => {\r\n        if (next <= len - 1) {\r\n            checkAnswer(selectedAns)\r\n            setNext(next + 1)\r\n            setSelectedAns('')\r\n        }\r\n        setAnswerList([...answerList, { 'question': question, 'options': options[0], 'id': `id${next}`, 'category': category, 'myAnswer': selectedAns, 'rightAnswer': options[1] }])\r\n    }\r\n\r\n    // for reverse timer\r\n    const [timer, setTimer] = useState(30)\r\n\r\n    useEffect(() => {\r\n        let myInterval = setInterval(() => {\r\n            if (timer > 0) {\r\n                setTimer(timer - 1)\r\n            } else {\r\n                setNext(next + 1)\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"q-box mx-auto my-5 p-4 text-center\">\r\n                <div className=\"q-box_head\">\r\n                    <div className=\"q-box_timer\">{timer}s</div>\r\n                    <div className=\"q-question\" dangerouslySetInnerHTML={{ __html: question }}></div>\r\n                </div>\r\n                <div className=\"q-box_body\">\r\n                    {\r\n                        options[0].map((index) => {\r\n                            i++;\r\n                            return <div id={alphabet[i]} key={index} onClick={handleOptionClick} className=\"q-box_options\">\r\n                                <div className='option-icon'>{alphabet[i]}</div> <div dangerouslySetInnerHTML={{ __html: index }}></div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center mx-3\">\r\n                    <Badge colorScheme='purple'>{category}</Badge>\r\n                    <button onClick={handleNextQuestion} className=\"btn btn-primary m-2\">{(next >= len - 1) ? 'Submit' : 'Next'}</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionBox\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}