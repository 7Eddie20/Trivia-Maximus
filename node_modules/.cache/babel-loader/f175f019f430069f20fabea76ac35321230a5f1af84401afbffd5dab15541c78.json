{"ast":null,"code":"import _objectSpread from \"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _classCallCheck from \"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"R:/Projects/Trivia-Maximus/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"transition\", \"transitionEnd\"];\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nvar DOMVisualElement = /*#__PURE__*/function (_VisualElement) {\n  _inherits(DOMVisualElement, _VisualElement);\n  var _super = _createSuper(DOMVisualElement);\n  function DOMVisualElement() {\n    _classCallCheck(this, DOMVisualElement);\n    return _super.apply(this, arguments);\n  }\n  _createClass(DOMVisualElement, [{\n    key: \"sortInstanceNodePosition\",\n    value: function sortInstanceNodePosition(a, b) {\n      /**\r\n       * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n       * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n       * to true if b preceeds a.\r\n       */\n      return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n  }, {\n    key: \"getBaseTargetFromProps\",\n    value: function getBaseTargetFromProps(props, key) {\n      var _a;\n      return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n  }, {\n    key: \"removeValueFromRenderState\",\n    value: function removeValueFromRenderState(key, _ref) {\n      var vars = _ref.vars,\n        style = _ref.style;\n      delete vars[key];\n      delete style[key];\n    }\n  }, {\n    key: \"makeTargetAnimatableFromInstance\",\n    value: function makeTargetAnimatableFromInstance(_ref2, _ref3, isMounted) {\n      var transition = _ref2.transition,\n        transitionEnd = _ref2.transitionEnd,\n        target = _objectWithoutProperties(_ref2, _excluded);\n      var transformValues = _ref3.transformValues;\n      var origin = getOrigin(target, transition || {}, this);\n      /**\r\n       * If Framer has provided a function to convert `Color` etc value types, convert them\r\n       */\n      if (transformValues) {\n        if (transitionEnd) transitionEnd = transformValues(transitionEnd);\n        if (target) target = transformValues(target);\n        if (origin) origin = transformValues(origin);\n      }\n      if (isMounted) {\n        checkTargetForNewValues(this, target, origin);\n        var parsed = parseDomVariant(this, target, origin, transitionEnd);\n        transitionEnd = parsed.transitionEnd;\n        target = parsed.target;\n      }\n      return _objectSpread({\n        transition: transition,\n        transitionEnd: transitionEnd\n      }, target);\n    }\n  }]);\n  return DOMVisualElement;\n}(VisualElement);\nexport { DOMVisualElement };","map":{"version":3,"names":["getOrigin","checkTargetForNewValues","parseDomVariant","VisualElement","DOMVisualElement","a","b","compareDocumentPosition","props","key","_a","style","vars","isMounted","transition","transitionEnd","target","transformValues","origin","parsed"],"sources":["R:/Projects/Trivia-Maximus/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs"],"sourcesContent":["import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\r\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\r\nimport { VisualElement } from '../VisualElement.mjs';\r\n\r\nclass DOMVisualElement extends VisualElement {\r\n    sortInstanceNodePosition(a, b) {\r\n        /**\r\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n         * to true if b preceeds a.\r\n         */\r\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        var _a;\r\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\r\n    }\r\n    removeValueFromRenderState(key, { vars, style }) {\r\n        delete vars[key];\r\n        delete style[key];\r\n    }\r\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\r\n        let origin = getOrigin(target, transition || {}, this);\r\n        /**\r\n         * If Framer has provided a function to convert `Color` etc value types, convert them\r\n         */\r\n        if (transformValues) {\r\n            if (transitionEnd)\r\n                transitionEnd = transformValues(transitionEnd);\r\n            if (target)\r\n                target = transformValues(target);\r\n            if (origin)\r\n                origin = transformValues(origin);\r\n        }\r\n        if (isMounted) {\r\n            checkTargetForNewValues(this, target, origin);\r\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\r\n            transitionEnd = parsed.transitionEnd;\r\n            target = parsed.target;\r\n        }\r\n        return {\r\n            transition,\r\n            transitionEnd,\r\n            ...target,\r\n        };\r\n    }\r\n}\r\n\r\nexport { DOMVisualElement };\r\n"],"mappings":";;;;;;;AAAA,SAASA,SAAS,EAAEC,uBAAuB,QAAQ,sBAAsB;AACzE,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,aAAa,QAAQ,sBAAsB;AAAC,IAE/CC,gBAAgB;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAClB,kCAAyBC,CAAC,EAAEC,CAAC,EAAE;MAC3B;AACR;AACA;AACA;AACA;MACQ,OAAOD,CAAC,CAACE,uBAAuB,CAACD,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpD;EAAC;IAAA;IAAA,OACD,gCAAuBE,KAAK,EAAEC,GAAG,EAAE;MAC/B,IAAIC,EAAE;MACN,OAAO,CAACA,EAAE,GAAGF,KAAK,CAACG,KAAK,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACD,GAAG,CAAC;IAC1E;EAAC;IAAA;IAAA,OACD,oCAA2BA,GAAG,QAAmB;MAAA,IAAfG,IAAI,QAAJA,IAAI;QAAED,KAAK,QAALA,KAAK;MACzC,OAAOC,IAAI,CAACH,GAAG,CAAC;MAChB,OAAOE,KAAK,CAACF,GAAG,CAAC;IACrB;EAAC;IAAA;IAAA,OACD,wDAAgGI,SAAS,EAAE;MAAA,IAAxEC,UAAU,SAAVA,UAAU;QAAEC,aAAa,SAAbA,aAAa;QAAKC,MAAM;MAAA,IAAMC,eAAe,SAAfA,eAAe;MACxF,IAAIC,MAAM,GAAGlB,SAAS,CAACgB,MAAM,EAAEF,UAAU,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;MACtD;AACR;AACA;MACQ,IAAIG,eAAe,EAAE;QACjB,IAAIF,aAAa,EACbA,aAAa,GAAGE,eAAe,CAACF,aAAa,CAAC;QAClD,IAAIC,MAAM,EACNA,MAAM,GAAGC,eAAe,CAACD,MAAM,CAAC;QACpC,IAAIE,MAAM,EACNA,MAAM,GAAGD,eAAe,CAACC,MAAM,CAAC;MACxC;MACA,IAAIL,SAAS,EAAE;QACXZ,uBAAuB,CAAC,IAAI,EAAEe,MAAM,EAAEE,MAAM,CAAC;QAC7C,IAAMC,MAAM,GAAGjB,eAAe,CAAC,IAAI,EAAEc,MAAM,EAAEE,MAAM,EAAEH,aAAa,CAAC;QACnEA,aAAa,GAAGI,MAAM,CAACJ,aAAa;QACpCC,MAAM,GAAGG,MAAM,CAACH,MAAM;MAC1B;MACA;QACIF,UAAU,EAAVA,UAAU;QACVC,aAAa,EAAbA;MAAa,GACVC,MAAM;IAEjB;EAAC;EAAA;AAAA,EAzC0Bb,aAAa;AA4C5C,SAASC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}